package Main;

import java.awt.event.*;
import java.text.DecimalFormat;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JTextField;
import javax.swing.JOptionPane;

public class AppWindow extends javax.swing.JFrame {

    private double currentValue, memory;
    private char operator;
    private boolean inputFinished;  //whether we are currenly adding digits
    private final DecimalFormat decimalFormat;
    private final AboutDialog aboutDialog;

    public AppWindow() {
        this.setLocation(500,250);
        initComponents();
        initButtonListeners();
        decimalFormat = new DecimalFormat("#.#########");
        
        display.setText("0");
        display.setInputVerifier(new DisplayVerifier());
        operator = '=';
        inputFinished = false;
        aboutDialog = new AboutDialog(this, true);
    }
    
    class DisplayVerifier extends InputVerifier {
        @Override
        public boolean verify(JComponent input) {
            display = (JTextField) input;
            try {
                Double.valueOf(display.getText());
                return true;
            }
            catch (Exception ex) {
                JOptionPane.showConfirmDialog(
                        null, "Invalid input!", "Abakus",
                        JOptionPane.CLOSED_OPTION, JOptionPane.WARNING_MESSAGE);
                System.out.println("Error converting : " + ex);
                return false;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        display = new javax.swing.JTextField();
        memClearButton = new javax.swing.JButton();
        memAddButon = new javax.swing.JButton();
        memSubButton = new javax.swing.JButton();
        memRecallButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        negativeButton = new javax.swing.JButton();
        multiButton = new javax.swing.JButton();
        diviButton = new javax.swing.JButton();
        oneButton = new javax.swing.JButton();
        twoButton = new javax.swing.JButton();
        threeButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        fourButton = new javax.swing.JButton();
        fiveButton = new javax.swing.JButton();
        sixButton = new javax.swing.JButton();
        subButton = new javax.swing.JButton();
        sevenButton = new javax.swing.JButton();
        eightButton = new javax.swing.JButton();
        nineButton = new javax.swing.JButton();
        equalButton = new javax.swing.JButton();
        zeroButton = new javax.swing.JButton();
        commaButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        dataMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        infoMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(display, gridBagConstraints);

        memClearButton.setText("MC");
        memClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memClearButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        getContentPane().add(memClearButton, gridBagConstraints);

        memAddButon.setText("M+");
        memAddButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memAddButonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        getContentPane().add(memAddButon, gridBagConstraints);

        memSubButton.setText("M-");
        memSubButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memSubButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        getContentPane().add(memSubButton, gridBagConstraints);

        memRecallButton.setText("MR");
        memRecallButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memRecallButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        getContentPane().add(memRecallButton, gridBagConstraints);

        clearButton.setText("C");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(clearButton, gridBagConstraints);

        negativeButton.setText("+/-");
        negativeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                negativeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(negativeButton, gridBagConstraints);

        multiButton.setText("*");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 6;
        getContentPane().add(multiButton, gridBagConstraints);

        diviButton.setText("/");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 4;
        getContentPane().add(diviButton, gridBagConstraints);

        oneButton.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        getContentPane().add(oneButton, gridBagConstraints);

        twoButton.setText("2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 8;
        getContentPane().add(twoButton, gridBagConstraints);

        threeButton.setText("3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 5;
        getContentPane().add(threeButton, gridBagConstraints);

        addButton.setText("+");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        getContentPane().add(addButton, gridBagConstraints);

        fourButton.setText("4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        getContentPane().add(fourButton, gridBagConstraints);

        fiveButton.setText("5");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 8;
        getContentPane().add(fiveButton, gridBagConstraints);

        sixButton.setText("6");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 4;
        getContentPane().add(sixButton, gridBagConstraints);

        subButton.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 4;
        getContentPane().add(subButton, gridBagConstraints);

        sevenButton.setText("7");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        getContentPane().add(sevenButton, gridBagConstraints);

        eightButton.setText("8");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 8;
        getContentPane().add(eightButton, gridBagConstraints);

        nineButton.setText("9");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 4;
        getContentPane().add(nineButton, gridBagConstraints);

        equalButton.setText("=");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        getContentPane().add(equalButton, gridBagConstraints);

        zeroButton.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 49;
        gridBagConstraints.weightx = 0.2;
        getContentPane().add(zeroButton, gridBagConstraints);

        commaButton.setText(".");
        commaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commaButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 6;
        getContentPane().add(commaButton, gridBagConstraints);

        dataMenu.setText("Datei");

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        dataMenu.add(exitMenuItem);

        jMenuBar1.add(dataMenu);

        helpMenu.setText("Hilfe");

        infoMenuItem.setText("About");
        infoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(infoMenuItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initButtonListeners() {
        zeroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroButtonActionPerformed(evt);
            }
        });
        
        oneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneButtonActionPerformed(evt);
            }
        });
        
        twoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoButtonActionPerformed(evt);
            }
        });
        
        threeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeButtonActionPerformed(evt);
            }
        });
        
        fourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourButtonActionPerformed(evt);
            }
        });
        
        fiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveButtonActionPerformed(evt);
            }
        });
        
        sixButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixButtonActionPerformed(evt);
            }
        });
        
        sevenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenButtonActionPerformed(evt);
            }
        });
        
        eightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightButtonActionPerformed(evt);
            }
        });
        
        nineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineButtonActionPerformed(evt);
            }
        });
        
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        
        subButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subButtonActionPerformed(evt);
            }
        });
        
        diviButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diviButtonActionPerformed(evt);
            }
        });
        
        multiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiButtonActionPerformed(evt);
            }
        });
        
        equalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalButtonActionPerformed(evt);
            }
        });
    }
    
    private void memClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memClearButtonActionPerformed
        memory = 0;
        memRecallButton.setForeground(java.awt.Color.BLACK);
        inputFinished = true;
    }//GEN-LAST:event_memClearButtonActionPerformed

    private void memAddButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memAddButonActionPerformed
        memory += Double.valueOf(getDisplay());
        memRecallButton.setForeground(java.awt.Color.BLUE);
        inputFinished = true;
    }//GEN-LAST:event_memAddButonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
       //erase everything except memory
       operator = '='; 
       currentValue = 0;
       display.setText("0");
       inputFinished = false;
    }//GEN-LAST:event_clearButtonActionPerformed

    private void memSubButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memSubButtonActionPerformed
        memory -= Double.valueOf(getDisplay());
        memRecallButton.setForeground(java.awt.Color.BLUE);
        inputFinished = true;
    }//GEN-LAST:event_memSubButtonActionPerformed

    private void memRecallButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memRecallButtonActionPerformed
        showResult(memory);
        inputFinished = true;
    }//GEN-LAST:event_memRecallButtonActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed
    
    private void commaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commaButtonActionPerformed
        if (inputFinished)
            return;
        
        String currentDisplay = getDisplay();
        if (!currentDisplay.contains("."))
            display.setText(currentDisplay + ".");
        
        inputFinished = false;
    }//GEN-LAST:event_commaButtonActionPerformed

    private void infoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoMenuItemActionPerformed
        aboutDialog.setLocation(550,260);
        aboutDialog.setVisible(true);
    }//GEN-LAST:event_infoMenuItemActionPerformed

    private void negativeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_negativeButtonActionPerformed
        if (inputFinished) {
            display.setText("-");
            inputFinished = false;
            return;
        }
        
        String currentString = getDisplay();
        if (currentString.equals("0"))
            return;
        if (currentString.contains("-"))
            display.setText(currentString.substring(1));
        
        else display.setText("-"+currentString);
    }//GEN-LAST:event_negativeButtonActionPerformed

    //display-logic
    private String getDisplay() {
        return display.getText();
    }
    
    private void showResult(double value) {
        display.setText(String.valueOf(decimalFormat.format(value)).replace(',', '.'));
    }
    
    private void showInput(int number) {
        if (getDisplay().equals("0") )
            display.setText("");
        
        if (inputFinished) {
            display.setText(String.valueOf(number));
            inputFinished = false;
        }
        else
            display.setText(getDisplay() + number);
    }
    
    private void zeroButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        showInput(0);
    }
    
    private void oneButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        showInput(1);
    }
    
    private void twoButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        showInput(2);
    }
    
    private void threeButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        showInput(3);
    }
    
    private void fourButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        showInput(4);
    }
    
    private void fiveButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        showInput(5);
    }
    
    private void sixButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        showInput(6);
    }
    
    private void sevenButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        showInput(7);
    }
    
    private void eightButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        showInput(8);
    }
    
    private void nineButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        showInput(9);
    }
    
    private double getValueFromDisplay() {
        return Double.valueOf(getDisplay());
    }
    
    private void calculate()    {
        double newValue = getValueFromDisplay();
        switch(operator) {
            case '+' :
                currentValue += newValue;
                break;
            case '-' :
                currentValue -= newValue;
                break;
            case '*' :
                currentValue *= newValue;
                break;
            case '/' :
                currentValue /= newValue;
                break;
            case '=' :
                currentValue = newValue;
                break;
        }
        showResult(currentValue);
    }
    
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        operatorButtonActionPerformed('+');
    }
    
    private void subButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        operatorButtonActionPerformed('-');
    }
    
    private void multiButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        operatorButtonActionPerformed('*');
    }
    
    private void diviButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        operatorButtonActionPerformed('/');
    }
    
    private void equalButtonActionPerformed(java.awt.event.ActionEvent evt)   {
        operatorButtonActionPerformed('=');
    }
    
    private void operatorButtonActionPerformed(char newOperator) {
        if (operator != '=') //there is a operation pending                                 
            calculate();
        else // '=', then display new value
            currentValue = getValueFromDisplay();
        
        //the new operator will be for future use
        operator = newOperator;
        inputFinished = true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton commaButton;
    private javax.swing.JMenu dataMenu;
    private javax.swing.JTextField display;
    private javax.swing.JButton diviButton;
    private javax.swing.JButton eightButton;
    private javax.swing.JButton equalButton;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JButton fiveButton;
    private javax.swing.JButton fourButton;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem infoMenuItem;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JButton memAddButon;
    private javax.swing.JButton memClearButton;
    private javax.swing.JButton memRecallButton;
    private javax.swing.JButton memSubButton;
    private javax.swing.JButton multiButton;
    private javax.swing.JButton negativeButton;
    private javax.swing.JButton nineButton;
    private javax.swing.JButton oneButton;
    private javax.swing.JButton sevenButton;
    private javax.swing.JButton sixButton;
    private javax.swing.JButton subButton;
    private javax.swing.JButton threeButton;
    private javax.swing.JButton twoButton;
    private javax.swing.JButton zeroButton;
    // End of variables declaration//GEN-END:variables
}
